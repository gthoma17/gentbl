:SCREEN{ NAME{MQLOPEN} TITLE{Last WebSphere MQ Call Info}               00600000
 TEMPLATE{KAZHDTMP.MQLOPEN}                     /* @03 */
  ORG{KAZ#MQLC}                                                         00610000
  FIXED{                                                                00620000
;
    DP{ FNAME{F001}     DLOC{MQLCBFR@} }       /* MSGBFR ADDRESS  */
    DP{ FNAME{F002}     DLOC{MQLCBFRL} }       /* MSGBFR LENGTH   */
    DP{ FNAME{F003}     DLOC{MQLCQTYP} }       /* QUEUE TYPE      */
    DP{ FNAME{F004}     DLOC{MQLCHOBJ} }       /* HANDLE NUMBER   */
    DP{ FNAME{F005}     DLOC{MQLCRC} }         /* REASON CODE     */
    DP{ FNAME{F006}     DLOC{MQLCOPEN} }       /* MQ OPEN OPTION  */
    DP{ FNAME{F007}     DLOC{MQLCOPTN} }       /* PGM OPEN OPTION */
    DP{ FNAME{F009}     DLOC{MQLCQREL} }       /* MQ RELEASE  @02 */
;
   COND{ FNAME{CHKCODE} DLOC{MQLCRC}
         COMPOP{CLC,'2085',NL} }
   COND{ FNAME{GOTMHND} DLOC{MQLCMHND}
         COMPOP{CLC,'Y',E} }
   COND{ FNAME{GOODCC} DLOC{MQLCMQCC}
         COMPOP{CB,X'00000002',L} }
   COND{FNAME{OLDFMT} DLOC{MQLC@FMT}
         COMPOP{CLC,'1',E} }
;
    LITERAL{ FNAME{CALMOPEN} POS{1,1,40}        /*->fixedPro<-*/
        TEXT {CALL 'MQOPEN' USING}  }
    GROUP{ POS{13,1,79}
      HDR{YES} FNAME{EXCALINF}
        TEXT{                        Expanded Call Information }
    }
;
    GROUP{ POS{15,1,79}
        DATACOL{25}
      CHAR{ FNAME{QMGRNAME} POS{1,,4}
        XNAME{QMGR NAME}
        DLOC{MQLCQMGR}
        FDESC{ COL{1} FILL{.}
          TEXT{QMgr Name} }
        HELP{This is the name of the queue manager that CICS was
             connected to at the time of the dump. \P
        }
      }
      CHAR{ FNAME{QNAME2} POS{2,,48}
        XNAME{QUEUE NAME}
        DLOC{MQLCQNME}
        ATTR{ TABS }
        COMMAND{ NAME{.DFLT}
           CMD{CPR MQCB @FF003 @FF004 }
           DESC{Displays the queue defintions.  } }
        FDESC{ COL{1} FILL{.}
          TEXT{Queue Used in Call} }
        HELP{This is the name of the queue that was used for the
             MQOPEN call. \P
        }
      }
      CHAR{ FNAME{QNAME} POS{2,,48}
        XNAME{QUEUE NAME}
        DLOC{MQLCQNME}
        IF { COND{GOTMHND} THEN {
           ATTR{ TABS }
           COMMAND{ NAME{.DFLT}
              CMD{CPR MQCB @FF003 @FF004 }
              DESC{Displays the queue defintions.  } }
        }}
        FDESC{ COL{1} FILL{.}
          TEXT{Queue Used in Call} }
        HELP{This is the name of the queue that was used for the
             MQOPEN call. \P
        }
      }
    IF {COND{OLDFMT} THEN { } ELSE {
      IF { COND{GOTMHND} THEN {
         HEX{ FNAME{OPENOPT}  POS{3,,8}
           XNAME{OPEN OPTIONS}
           DLOC{MQLCOPEN}
              ATTR{ TABS }
              COMMAND{ NAME{.DFLT}
                 CMD{CPR MQM2 OPN @FF006 }
                 DESC{Displays the OPEN options} }
           FDESC{ COL{1} FILL{.}
             TEXT{Open Options} }
           HELP{These are the options that the queue manager used to
                open the queue. \P
           }
         }
      }} } }
   }  /* end-group */
;
  }                                              /* end-fixed */        03130000
  HELP{The MQOPEN call is used to establish access to an object. \P\P
       This screen displays the parameters that were used in the        03140000
       MQOPEN call. \P
  }                                                                     03160000

  HEX{ FNAME{BFRLGTH}  POS{5,,8}
        XNAME{BUFFER LENGTH}
        DLOC{MQLCBFRL}
        FDESC{ COL{7} FILL{.}
          TEXT{BufferLength} }
        HELP{Buffer Length:  Input parameter \P\P
             Length in bytes of the Buffer area.
        }
      }
      BIN{ FNAME{BFRLGTH2}  POS{5,51,8}
        XNAME{BUFFER LENGTH}
        DLOC{MQLCBFRL}
        FDESC{ COL{40} FILL{.}
          TEXT{Decimal} }
      }

  LITERAL { POS{+1,36}
    FNAME{SYNC}
    XNAME{MQGMO_Syncpoint}
    TEXT{ }
    FDESC{ COL{1}
      TEXT{MQGMO_SYNCPOINT}
      FILL{.}
    }
    HELP{\IM('MQOPTGET.SYNC')}
  }
  IF { COND{OP2B4X02}
   THEN { LITERAL { POS{+0,36}
          FNAME{SET_03A}
          XNAME{Sync_Prog_Set}
          TEXT{YES}
          HELP{\IM('MQOPTGET.YESPROG')
               \P\P
               \IM('MQOPTGET.SYNC')}
          }
   }
   ELSE { LITERAL { POS{+0,36}
          FNAME{NOT_03A}
          XNAME{Sync_Prog_Off}
          TEXT{NO}
          HELP{\IM('MQOPTGET.NOPROG')
               \P\P
               \IM('MQOPTGET.SYNC')}
          }
  }}

}